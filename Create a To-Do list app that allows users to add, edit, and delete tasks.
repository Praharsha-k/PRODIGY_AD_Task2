import tkinter as tk
from tkinter import messagebox, simpledialog

class TodoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List App")
        
        # Set the window to full screen
        self.root.attributes('-fullscreen', True)
        self.root.configure(bg='black')  # Set background color to black

        self.tasks = []

        # Create UI components with black theme
        self.task_listbox = tk.Listbox(self.root, selectmode=tk.SINGLE, width=100, height=30, bg='black', fg='white', highlightbackground='gray')
        self.task_listbox.pack(pady=10)

        self.add_button = tk.Button(self.root, text="Add Task", command=self.add_task, bg='gray', fg='white')
        self.add_button.pack(pady=5)

        self.edit_button = tk.Button(self.root, text="Edit Task", command=self.edit_task, bg='gray', fg='white')
        self.edit_button.pack(pady=5)

        self.delete_button = tk.Button(self.root, text="Delete Task", command=self.delete_task, bg='gray', fg='white')
        self.delete_button.pack(pady=5)

        # Bind the Escape key to exit full-screen mode
        self.root.bind("<Escape>", self.toggle_fullscreen)

    def toggle_fullscreen(self, event=None):
        self.root.attributes('-fullscreen', not self.root.attributes('-fullscreen'))

    def add_task(self):
        task = simpledialog.askstring("Add Task", "Enter the task:", parent=self.root)
        if task:
            self.tasks.append(task)
            self.update_task_list()

    def edit_task(self):
        try:
            selected_index = self.task_listbox.curselection()[0]
            current_task = self.tasks[selected_index]
            new_task = simpledialog.askstring("Edit Task", "Edit the task:", initialvalue=current_task, parent=self.root)
            if new_task:
                self.tasks[selected_index] = new_task
                self.update_task_list()
        except IndexError:
            messagebox.showwarning("Edit Task", "Please select a task to edit.", parent=self.root)

    def delete_task(self):
        try:
            selected_index = self.task_listbox.curselection()[0]
            self.tasks.pop(selected_index)
            self.update_task_list()
        except IndexError:
            messagebox.showwarning("Delete Task", "Please select a task to delete.", parent=self.root)

    def update_task_list(self):
        self.task_listbox.delete(0, tk.END)  # Clear the listbox
        for task in self.tasks:
            self.task_listbox.insert(tk.END, task)  # Add tasks to the listbox

if __name__ == "__main__":
    root = tk.Tk()
    todo_app = TodoApp(root)
    root.mainloop()
5
